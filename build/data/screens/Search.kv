<SearchVideos>:
    name: "search"
    videolist: videolist
    scroll: scroll

    from_video_thumb: from_video_thumb
    temp_video_thumb: temp_video_thumb

    from_channel_thumb: from_channel_thumb
    temp_channel_thumb: temp_channel_thumb

    MDBoxLayout:
        padding: [dp(20), dp(20)]
        orientation: "vertical"
        spacing: dp(14)

        MyLabel:
            text: "YouTube Search:"
            adaptive_height: True
            font_size: sp(23)
            halign: "left"
        
        MDSeparator:
            pos_hint: {"center_x":.5}
            size_hint_x: None
            width: root.width
        
        MDTextField:
            on_text_validate: root.getResult(self.text)
            hint_text: "Video name or url"
            on_text: self.scroll_x = -1
            # text: "ruas de sao paulo"
            icon_left: "magnify"
            font_name: Mustica
            mode: "rectangle"
            # focus: True

        MDScrollView:
            bar_inactive_color: app.theme_cls.primary_light
            bar_color: app.theme_cls.primary_dark
            width: Window.width - dp(20)
            pos_hint: {"center_x":.5}
            effect_cls: "ScrollEffect"
            do_scroll: [False, True]
            size_hint_x: None
            bar_width: dp(3)
            disabled: True
            id: scroll
            
            MDBoxLayout:
                id: videolist
                padding: [0, dp(5), dp(10), 0]
                orientation: "vertical"
                adaptive_height: True
                size_hint_y: None
                spacing: dp(25)

                CardInfo:
                CardInfo:
    
    MDHeroFrom:
        id: from_video_thumb
        size_hint: None, None
        tag: "video_thumb"
        on_transform_out:
            animateWidget(
            from_video_thumb,
            args={"radius":[dp(15),dp(15),dp(15),dp(15)],
            "duration":.4},
            complete=root.hide_temp
            )

        on_transform_in:
            animateWidget(
            root.parent.info.play,
            args={"opacity":1 if (hasattr(root.instance, "type")\
            and root.instance.type in {"video", "short"}) \
            else 0, "duration":1}
            )

        FitImage:
            id: temp_video_thumb
            size: from_video_thumb.size
            size_hint: None, None
            radius: dp(15)
    
    MDHeroFrom:
        id: from_channel_thumb
        size_hint: None, None
        tag: "channel_thumb"

        FitImage:
            id: temp_channel_thumb
            size_hint: None, None
            size: from_channel_thumb.size
            radius: dp(10)